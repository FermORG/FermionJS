// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`tabs components 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="form-group"
>
    <input
        className="form-control input"
        onKeyPress={[Function]}
        placeholder="New State Key..."
    />
    <hr />
    <ConfigOption
        action={[Function]}
        actionHandler={[Function]}
        activeComponent="0"
        deleter={[Function]}
        onClick={[Function]}
        propKey="default"
        value="default"
    />
</div>,
  "nodes": Array [
    <div
      className="form-group"
>
      <input
            className="form-control input"
            onKeyPress={[Function]}
            placeholder="New State Key..."
      />
      <hr />
      <ConfigOption
            action={[Function]}
            actionHandler={[Function]}
            activeComponent="0"
            deleter={[Function]}
            onClick={[Function]}
            propKey="default"
            value="default"
      />
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <State
        addState={[Function]}
        deleteState={[Function]}
        workspace={
                Object {
                        "activeComponent": "0",
                        "componentCounter": 2,
                        "components": Object {
                          "0": Object {
                            "children": Array [],
                            "events": Object {
                              "test": "test",
                            },
                            "id": 0,
                            "name": "BlackBox",
                            "parentID": "workspace",
                            "props": Object {
                              "style": Object {
                                "backgroundColor": "black",
                                "display": "inline-block",
                                "height": "100px",
                                "overflow": "auto",
                                "position": "relative",
                                "width": "100px",
                              },
                              "testProp": null,
                            },
                          },
                          "1": Object {
                            "children": Array [],
                            "events": Object {
                              "test": "event test =]",
                            },
                            "id": 1,
                            "name": "BlueBox",
                            "parentID": "workspace",
                            "props": Object {
                              "style": Object {
                                "backgroundColor": "blue",
                                "display": "inline-block",
                                "height": "100px",
                                "overflow": "auto",
                                "position": "relative",
                                "width": "100px",
                              },
                            },
                          },
                          "workspace": Object {
                            "children": Array [
                              0,
                              1,
                            ],
                            "id": "workspace",
                          },
                        },
                        "state": Object {
                          "default": "default",
                        },
                      }
        }
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": State {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "deleteStoreValues": [Function],
        "props": Object {
          "addState": [Function],
          "deleteState": [Function],
          "workspace": Object {
            "activeComponent": "0",
            "componentCounter": 2,
            "components": Object {
              "0": Object {
                "children": Array [],
                "events": Object {
                  "test": "test",
                },
                "id": 0,
                "name": "BlackBox",
                "parentID": "workspace",
                "props": Object {
                  "style": Object {
                    "backgroundColor": "black",
                    "display": "inline-block",
                    "height": "100px",
                    "overflow": "auto",
                    "position": "relative",
                    "width": "100px",
                  },
                  "testProp": null,
                },
              },
              "1": Object {
                "children": Array [],
                "events": Object {
                  "test": "event test =]",
                },
                "id": 1,
                "name": "BlueBox",
                "parentID": "workspace",
                "props": Object {
                  "style": Object {
                    "backgroundColor": "blue",
                    "display": "inline-block",
                    "height": "100px",
                    "overflow": "auto",
                    "position": "relative",
                    "width": "100px",
                  },
                },
              },
              "workspace": Object {
                "children": Array [
                  0,
                  1,
                ],
                "id": "workspace",
              },
            },
            "state": Object {
              "default": "default",
            },
          },
        },
        "refs": Object {},
        "state": null,
        "updateStore": [Function],
        "updateStoreValues": [Function],
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="form-group"
>
          <input
                    className="form-control input"
                    onKeyPress={[Function]}
                    placeholder="New State Key..."
          />
          <hr />
          <ConfigOption
                    action={[Function]}
                    actionHandler={[Function]}
                    activeComponent="0"
                    deleter={[Function]}
                    onClick={[Function]}
                    propKey="default"
                    value="default"
          />
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="form-group"
>
          <input
                    className="form-control input"
                    onKeyPress={[Function]}
                    placeholder="New State Key..."
          />
          <hr />
          <ConfigOption
                    action={[Function]}
                    actionHandler={[Function]}
                    activeComponent="0"
                    deleter={[Function]}
                    onClick={[Function]}
                    propKey="default"
                    value="default"
          />
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <State
    addState={[Function]}
    deleteState={[Function]}
    workspace={
        Object {
            "activeComponent": "0",
            "componentCounter": 2,
            "components": Object {
              "0": Object {
                "children": Array [],
                "events": Object {
                  "test": "test",
                },
                "id": 0,
                "name": "BlackBox",
                "parentID": "workspace",
                "props": Object {
                  "style": Object {
                    "backgroundColor": "black",
                    "display": "inline-block",
                    "height": "100px",
                    "overflow": "auto",
                    "position": "relative",
                    "width": "100px",
                  },
                  "testProp": null,
                },
              },
              "1": Object {
                "children": Array [],
                "events": Object {
                  "test": "event test =]",
                },
                "id": 1,
                "name": "BlueBox",
                "parentID": "workspace",
                "props": Object {
                  "style": Object {
                    "backgroundColor": "blue",
                    "display": "inline-block",
                    "height": "100px",
                    "overflow": "auto",
                    "position": "relative",
                    "width": "100px",
                  },
                },
              },
              "workspace": Object {
                "children": Array [
                  0,
                  1,
                ],
                "id": "workspace",
              },
            },
            "state": Object {
              "default": "default",
            },
          }
    }
/>,
}
`;
