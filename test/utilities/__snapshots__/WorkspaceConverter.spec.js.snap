// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`conversion of empty workspace will  1`] = `
Array [
  Object {
    "code": "import React, { Component } from \\"react\\";
import reactCSS from \\"reactcss\\";

class App extends Component {
  constructor(props) {
    super(props);
    this.state = {};
  }
  /*Anything you type in here will be appended to App.js as a 
 method. you can then attach them as event handlers, logic handlers, etc. 
 make sure to append an  symbol following the closing bracket of your method!*/
  render() {
    const props = this.props;
    const style = reactCSS({
      default: { app: { width: \\"602.40625px\\", height: \\"617.75px\\" } }
    });

    return <div style={style.app} />;
  }
}
export default App;
",
    "ext": ".js",
    "fileName": "App",
    "id": "workspace",
    "name": "App",
  },
]
`;

exports[`conversion of workspace with one nested components will generate 3 exportable texts 1`] = `
Array [
  Object {
    "code": "import React, { Component } from \\"react\\";
import reactCSS from \\"reactcss\\";
import BlueBox_001 from \\"../BlueBox_001/BlueBox_001\\";

class BlackBox extends Component {
  constructor(props) {
    super(props);
  }

  render() {
    const props = this.props;
    const style = reactCSS({
      default: {
        blackbox: {
          position: \\"absolute\\",
          height: \\"100px\\",
          width: \\"100px\\",
          display: \\"inline-block\\",
          backgroundColor: \\"black\\",
          overflow: \\"auto\\"
        }
      }
    });

    return (
      <div style={style.blackbox}>
        <div {...props} />

        <BlueBox_001 />
      </div>
    );
  }
}
export default BlackBox;
",
    "ext": ".js",
    "fileName": "BlackBox_000",
    "id": 0,
    "name": "BlackBox",
  },
  Object {
    "code": "import React, { Component } from \\"react\\";
import reactCSS from \\"reactcss\\";

class BlueBox extends Component {
  constructor(props) {
    super(props);
  }

  render() {
    const props = this.props;
    const style = reactCSS({
      default: {
        bluebox: {
          position: \\"absolute\\",
          height: \\"100px\\",
          width: \\"100px\\",
          display: \\"inline-block\\",
          backgroundColor: \\"blue\\",
          overflow: \\"auto\\"
        }
      }
    });

    return (
      <div style={style.bluebox}>
        <div {...props} />
      </div>
    );
  }
}
export default BlueBox;
",
    "ext": ".js",
    "fileName": "BlueBox_001",
    "id": 1,
    "name": "BlueBox",
  },
  Object {
    "code": "import React, { Component } from \\"react\\";
import reactCSS from \\"reactcss\\";
import BlackBox_000 from \\"../BlackBox_000/BlackBox_000\\";

class App extends Component {
  constructor(props) {
    super(props);
    this.state = {};
  }
  /*Anything you type in here will be appended to App.js as a 
 method. you can then attach them as event handlers, logic handlers, etc. 
 make sure to append an  symbol following the closing bracket of your method!*/
  render() {
    const props = this.props;
    const style = reactCSS({
      default: { app: { width: \\"602.40625px\\", height: \\"617.75px\\" } }
    });

    return (
      <div style={style.app}>
        <BlackBox_000 />
      </div>
    );
  }
}
export default App;
",
    "ext": ".js",
    "fileName": "App",
    "id": "workspace",
    "name": "App",
  },
]
`;

exports[`conversion of workspace with two components will generate 3 exportable texts 1`] = `
Array [
  Object {
    "code": "import React, { Component } from \\"react\\";
import reactCSS from \\"reactcss\\";

class BlackBox extends Component {
  constructor(props) {
    super(props);
  }

  render() {
    const props = this.props;
    const style = reactCSS({
      default: {
        blackbox: {
          position: \\"absolute\\",
          height: \\"100px\\",
          width: \\"100px\\",
          display: \\"inline-block\\",
          backgroundColor: \\"black\\",
          overflow: \\"auto\\"
        }
      }
    });

    return (
      <div
        style={style.blackbox}
        onClick={() => {
          console.log(\\"test\\");
        }}
      >
        <div {...props} />
      </div>
    );
  }
}
export default BlackBox;
",
    "ext": ".js",
    "fileName": "BlackBox_000",
    "id": 0,
    "name": "BlackBox",
  },
  Object {
    "code": "import React, { Component } from \\"react\\";
import reactCSS from \\"reactcss\\";

class BlueBox extends Component {
  constructor(props) {
    super(props);
  }

  render() {
    const props = this.props;
    const style = reactCSS({
      default: {
        bluebox: {
          position: \\"absolute\\",
          height: \\"100px\\",
          width: \\"100px\\",
          display: \\"inline-block\\",
          backgroundColor: \\"blue\\",
          overflow: \\"auto\\"
        }
      }
    });

    return (
      <div style={style.bluebox}>
        <div {...props} />
      </div>
    );
  }
}
export default BlueBox;
",
    "ext": ".js",
    "fileName": "BlueBox_001",
    "id": 1,
    "name": "BlueBox",
  },
  Object {
    "code": "import React, { Component } from \\"react\\";
import reactCSS from \\"reactcss\\";
import BlackBox_000 from \\"../BlackBox_000/BlackBox_000\\";
import BlueBox_001 from \\"../BlueBox_001/BlueBox_001\\";

class App extends Component {
  constructor(props) {
    super(props);
    this.state = {};
  }
  /*Anything you type in here will be appended to App.js as a 
 method. you can then attach them as event handlers, logic handlers, etc. 
 make sure to append an  symbol following the closing bracket of your method!*/
  render() {
    const props = this.props;
    const style = reactCSS({
      default: { app: { width: \\"602.40625px\\", height: \\"617.75px\\" } }
    });

    return (
      <div style={style.app}>
        <BlackBox_000 />
        <BlueBox_001 />
      </div>
    );
  }
}
export default App;
",
    "ext": ".js",
    "fileName": "App",
    "id": "workspace",
    "name": "App",
  },
]
`;
